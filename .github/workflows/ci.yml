name: CI Pipeline

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build project
        run: mvn clean compile

  test:
    name: Test
    runs-on: windows-latest
    needs: build  # Exécute le job Test après Build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Run tests
        #run: mvn clean test -Dtest=**/Intergration/**/*
        run: mvn clean test

  clover:
    name: Clover Coverage
    runs-on: windows-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Run Clover coverage
        run: ./mvnw clean -fae clover:setup test clover:aggregate clover:clover

      - name: Upload Clover Report
        uses: actions/upload-artifact@v4
        with:
          name: clover-report
          path: target/site/clover

  sonarqube:
    name: SonarQube Analysis
    runs-on: windows-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Désactiver les clones superficiels pour une meilleure analyse

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=amira2001_projetprodlogiciel